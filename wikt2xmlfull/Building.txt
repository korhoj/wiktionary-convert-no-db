Download and install OpenJDK 24 for Windows.
  The minimum supported version by my project is OpenJDK 21.
  I myself use OpenJDK 24 in Eclipse in the JDK 21 compatibility mode.
Downloading OpenJDK 24:
  https://jdk.java.net/24/
  Click the "zip" text in this line to download the Win x64 zip version:
    "Windows / x64 	zip (sha256) 	211589892" (bytes)
  --> https://download.java.net/java/GA/jdk24/1f9ff9062db4449d8ca828c504ffae90/36/GPL/openjdk-24_windows-x64_bin.zip

Download and run Eclipse Installer for Windows.
  https://www.eclipse.org/downloads/packages/installer
  --> https://www.eclipse.org/downloads/download.php?file=/oomph/epp/2025-03/R/eclipse-inst-jre-win64.exe
  Use it to install Eclipse JEE 2025-03 ("Eclipse IDE for Enterprise Java and Web Developers").
    Installation Folder: C:\Usr\eclipse-jee-2025-03 (e.g.)
  When the installer finally starts Eclipse and it asks for the Eclipse workspace, exit
  
  Add in C:\Usr\eclipse-jee-2025-03\eclipse.ini
    -Xms1024m
    -Xmx4096m
  e.g. under the line:
    -Dsun.java.command=Eclipse
Start Eclipse
  Select a directory as workspace:
    G:\Users\Joel\git\wiktionary-convert-no-db (e.g.)

The project uses Maven to import the Google HTTP Client Library for Java. See https://googleapis.github.io/google-http-java-client/setup.html
I check every now and then which is the latest non-beta release and switch to it. It is defined in pom.xml. The release site is https://github.com/googleapis/google-http-java-client/releases
To change the version used:
  Double-click pom.xml. If it doesn't open in the rightmost tab, "pom.xml", which is the source view, click it.
  Find this section and change the value of "version" to e.g. the latest available:
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client</artifactId>
      <version>1.46.3</version>
    </dependency>
  Then right click the "wikt2xmlfull" project tree and select > Maven > Update Project.
  Open the "Maven Dependencies" tree to verify the "google-http-client-x.yy.z.jar" is the version
  you wanted, e.g. "google-http-client-1.46.3.jar". The other JARs have their independent version
  numbers.

Right click StripNamespaces.java > Run As > Java Applications
  Eclipse runs the program, which outputs in the Console tab, that it got 0 arguments and it quits
Right click StripNamespaces.java > Run As > Run Configurations
  Java Application > StripNamespaces should be selected automatically. If not, select it
Right click StripNamespaces.java > Export > Java > Runnable JAR file
  Launch configuration = StripNamespaces - wikt2xmlfull
  Export destination: Choose path where you want to keep the runnable JAR
  [x] Package required libraries into generated JAR
Perform the Run As and Export steps also for ReadStripped.java
The two runnable JARs really only differ in the Rsrc-Main-Class in META-INF\MANIFEST.MF

Running tests in Eclipse

For running Wiktionary conversion tests in Eclipse, you need to create a run (or debug) configuration. They
unfortunately can't easily be shared in Git.

To define a test for e.g. ReadStripped.java (can also be done for StripNamespaces.java), right click
 ReadStripped.java > Run As > Run Configurations.
Select Java Application and press the New Launch Configuration icon.
Enter a Name for the configuration.

1) Test for the English Wiktionary, processing all languages.
Input in examples/en-apples.txt

Right click ReadStripped.java > Run As > Run Configurations
Select Java Application and press the New Launch Configuration icon
Enter a Name for the configuration, e.g.: ReadStripped apples.txt ALL languages test
Enter into the Arguments tab:
  INFILE=examples\en-apples.txt OUTFILE=examples\out\en-ALL-apples-out.txt LANG=ALL OUTPUTLANGNAMES=true OUTTYPE=Stardict RESTARTATLINE=0 LANGCODE=ALL ONLYLANGUAGES=true WIKTCODE=en

Or e.g. with full folder path for the output file:
  INFILE=examples/en-apples.txt OUTFILE=G:\Dropbox\Dictionary\wikt\Stardict\OwnStarDict\en-ALL-apples-out.txt LANG=ALL OUTPUTLANGNAMES=true OUTTYPE=Stardict RESTARTATLINE=0 LANGCODE=ALL ONLYLANGUAGES=true WIKTCODE=en

To run the test, press Run (or Debug)
Refresh the workspace. Open examples\out\en-ALL-apples-out.txt. It should contain:

apples and pears	n.\n(context Cockney rhyming slang English) stairs

2) Test for the English Wiktionary, processing definitions in English only.
Input in examples/en-apples.txt

Enter a Name for the configuration, e.g.: ReadStripped apples.txt English only test
Enter into the Arguments tab:
  INFILE=examples\en-apples.txt OUTFILE=examples\out\en-en-apples-out.txt LANG=en OUTPUTLANGNAMES=true OUTTYPE=Stardict RESTARTATLINE=0 LANGCODE=ALL ONLYLANGUAGES=true WIKTCODE=en
Press Run
Refresh the workspace. Open examples\out\en-en-apples-out.txt. It should contain the same than the previous test.

See Running.txt for instructions on running the JARs via dedicated Win batch scripts,
e.g. "ReadStripped SD en-ALL.cmd". Running that way does not use Eclipse, just the JDK.
For producing real builds it's probably clearest to use the scripts, not Eclipse. At least it requires less RAM.
If you want, you can of course also run tests outside of Ecipse, but I haven't written batch scripts for that.